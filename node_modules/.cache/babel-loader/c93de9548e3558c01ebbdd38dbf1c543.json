{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/Nav/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { retrieveNavbar } from '../../service/WPService';\nimport styled, { css } from 'styled-components';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopNav = styled.div`\n    position:fixed;\n    top:0;\n\n    z-index:999;\n    height:60px;\n    width:100%;\n    display:flex;\n    background-color:var(--primary);\n    border-bottom: 2px white solid;\n    @media (max-width: 42em) {\n        flex-direction:column;\n    }\n    ${props => props.visible === false && css`\n        top: -60px;\n    `}\n`;\n_c = TopNav;\nconst NavItem = styled.li`\n    list-style-type: none;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    transition: all 0.3s ease;\n    margin:.2em;\n    @media (max-width: 42em) {\n        width:auto;\n    }\n`;\n_c2 = NavItem;\nconst NavLink = styled.a`\n    min-width:100px;\n    text-align: center;\n    text-decoration: none;\n    width:auto;\n    border-radius: .5em;\n    padding:.8em;\n    color: white;\n    :hover{\n        color: var(--s);\n        transition:1s;\n        -webkit-transition:1s;\n        background-color:var(--p-dark);\n        border-radius:.3em;\n    }\n    @media (max-width: 42em) {\n        width:100%;\n    }\n`;\n_c3 = NavLink;\nconst Logo = styled(NavLink)`\n    margin-right: auto;\n    @media (max-width: 42em) {\n        width:8em;\n    }\n`;\n_c4 = Logo;\nconst Right = styled.div`\ndisplay:flex;\nflex-direction:row;\nmargin-left:auto;\nbackground-color:var(--primary);\n\n@media (max-width: 42em) {\n    flex-direction:column;\n    margin-left:0;\n    margin-bot:5em;\n    ${props => !props.show && css`\n    display:none;\n`}\n}\n`;\n_c5 = Right;\nconst Left = styled.div`\n    display:flex;\n    justify-content:space-between;\n`;\n_c6 = Left;\nconst Burger = styled.a`\n    color:white;\n    display:none;\n    text-align: center;\n    transition: all 0.3s ease;\n    text-decoration: none;\n    margin:.2em;\n    padding:.8em;\n    @media (max-width: 42em) {\n        display:inline;\n    }\n    :hover{\n        color: var(--s);\n        transition:1s;\n        -webkit-transition:1s;\n    }\n`;\n_c7 = Burger;\nexport default function Navbar() {\n  _s();\n\n  const [listItems, setListItems] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [scrollpos, setScrollpos] = useState(window.pageYOffset);\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    function handleScroll() {\n      const currentScrollPos = window.pageYOffset;\n      let visible = scrollpos > currentScrollPos;\n\n      if (currentScrollPos === 0) {\n        visible = true;\n      }\n\n      setScrollpos(currentScrollPos);\n      setVisible(visible);\n      console.log('ja');\n    }\n\n    ;\n    window.addEventListener(\"scroll\", handleScroll);\n    retrieveNavbar().then(res => {\n      const Items = res.items.map(item => /*#__PURE__*/_jsxDEV(NavItem, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          href: item.url,\n          children: item.title\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this));\n      setLoaded(true);\n      setListItems(Items);\n    });\n    return () => {\n      setLoaded(false);\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [scrollpos]);\n\n  const showLinks = () => {\n    let show = clicked;\n    setClicked(!show);\n  };\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(TopNav, {\n      visible: visible,\n      children: [/*#__PURE__*/_jsxDEV(Left, {\n        children: [/*#__PURE__*/_jsxDEV(NavItem, {\n          children: /*#__PURE__*/_jsxDEV(Logo, {\n            mr: true,\n            href: \"/\",\n            children: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n          children: /*#__PURE__*/_jsxDEV(Burger, {\n            onClick: showLinks,\n            children: /*#__PURE__*/_jsxDEV(ReorderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Right, {\n        show: clicked,\n        children: listItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(Navbar, \"FZ1Ni0+n0ftCwAggl8T55ClULuk=\");\n\n_c8 = Navbar;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"TopNav\");\n$RefreshReg$(_c2, \"NavItem\");\n$RefreshReg$(_c3, \"NavLink\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"Right\");\n$RefreshReg$(_c6, \"Left\");\n$RefreshReg$(_c7, \"Burger\");\n$RefreshReg$(_c8, \"Navbar\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/Nav/Navbar.js"],"names":["React","useState","useEffect","retrieveNavbar","styled","css","ReorderIcon","TopNav","div","props","visible","NavItem","li","NavLink","a","Logo","Right","show","Left","Burger","Navbar","listItems","setListItems","loaded","setLoaded","clicked","setClicked","scrollpos","setScrollpos","window","pageYOffset","setVisible","handleScroll","currentScrollPos","console","log","addEventListener","then","res","Items","items","map","item","url","title","removeEventListener","showLinks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {retrieveNavbar} from '../../service/WPService';\nimport styled, {css} from 'styled-components'\nimport ReorderIcon from '@material-ui/icons/Reorder'\n\nconst TopNav = styled.div`\n    position:fixed;\n    top:0;\n\n    z-index:999;\n    height:60px;\n    width:100%;\n    display:flex;\n    background-color:var(--primary);\n    border-bottom: 2px white solid;\n    @media (max-width: 42em) {\n        flex-direction:column;\n    }\n    ${props => props.visible === false && css`\n        top: -60px;\n    `}\n`\nconst NavItem = styled.li`\n    list-style-type: none;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    transition: all 0.3s ease;\n    margin:.2em;\n    @media (max-width: 42em) {\n        width:auto;\n    }\n`\n\nconst NavLink = styled.a`\n    min-width:100px;\n    text-align: center;\n    text-decoration: none;\n    width:auto;\n    border-radius: .5em;\n    padding:.8em;\n    color: white;\n    :hover{\n        color: var(--s);\n        transition:1s;\n        -webkit-transition:1s;\n        background-color:var(--p-dark);\n        border-radius:.3em;\n    }\n    @media (max-width: 42em) {\n        width:100%;\n    }\n`\nconst Logo = styled(NavLink)`\n    margin-right: auto;\n    @media (max-width: 42em) {\n        width:8em;\n    }\n`\n\nconst Right = styled.div`\ndisplay:flex;\nflex-direction:row;\nmargin-left:auto;\nbackground-color:var(--primary);\n\n@media (max-width: 42em) {\n    flex-direction:column;\n    margin-left:0;\n    margin-bot:5em;\n    ${props => !props.show && css`\n    display:none;\n`}\n}\n`\nconst Left = styled.div`\n    display:flex;\n    justify-content:space-between;\n`\n\nconst Burger = styled.a`\n    color:white;\n    display:none;\n    text-align: center;\n    transition: all 0.3s ease;\n    text-decoration: none;\n    margin:.2em;\n    padding:.8em;\n    @media (max-width: 42em) {\n        display:inline;\n    }\n    :hover{\n        color: var(--s);\n        transition:1s;\n        -webkit-transition:1s;\n    }\n`\nexport default function Navbar () {\n    const [listItems, setListItems] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [clicked, setClicked] = useState(false);\n    const [scrollpos, setScrollpos] = useState(window.pageYOffset)\n    const [visible, setVisible] = useState(true);\n\n    useEffect( () => {\n        function handleScroll() {\n            const currentScrollPos = window.pageYOffset;\n            let visible = scrollpos > currentScrollPos;\n            if(currentScrollPos === 0){\n                visible = true;\n            }\n            setScrollpos(currentScrollPos)\n            setVisible(visible)\n            console.log('ja')\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n\n        retrieveNavbar()\n        .then(res => {\n            const Items = res.items.map((item) =>\n            <NavItem key={item.title}>\n                <NavLink key={item.title} href={item.url}>{item.title}</NavLink>\n            </NavItem>\n            );\n            setLoaded(true);\n            setListItems(Items)\n        });\n        return () => {\n            setLoaded(false);\n            window.removeEventListener(\"scroll\", handleScroll)\n        }\n    },[scrollpos])\n\n    const showLinks = () => {\n        let show = clicked;\n        setClicked(!show)\n    }\n\n    if(loaded){\n        return (\n                <TopNav visible={visible}>\n                    <Left>\n                        <NavItem>\n                            <Logo mr href='/'>Logo</Logo>\n                        </NavItem>\n                        <NavItem>\n                            <Burger onClick={showLinks}><ReorderIcon/></Burger>\n                        </NavItem>\n                    </Left>\n                    <Right show={clicked}>\n                        {listItems}\n                    </Right>\n                </TopNav>\n        )\n    }\n    else {\n        return null;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}