{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/Sections/InstaPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { retrieveIG } from '../../service/IGService';\nimport { Wrapper, Spinner } from '../Styled';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageContainer = styled.div`\n    float:left;\n    position: relative;\n    width: 30%;\n    padding-bottom : 30%; /* = width for a 1:1 aspect ratio */\n    margin:1.66%;\n    background-position:center center;\n    background-repeat:no-repeat;\n    background-size:cover; /* you change this to \"contain\" if you don't want the images to be cropped */\n`;\n_c = ImageContainer;\nconst Image = styled.img`\n    width:100%;\n    height:100%;\n    object-fit: cover;\n    display:inline-block; \n    @media (max-width: 45em) {\n        width: 100%;\n    }\n`;\n_c2 = Image;\nexport default function InstaPreview() {\n  _s();\n\n  const [posts, setPosts] = useState();\n  const [isLoaded, setIsLoaded] = useState();\n  useEffect(() => {\n    retrieveIG().then(res => {\n      setPosts(res);\n      setIsLoaded(true);\n    });\n    return function cleanup() {\n      setIsLoaded(false);\n    };\n  }, []);\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      id: \"ig\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(ImageContainer, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: post.media_url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      id: \"ig\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(InstaPreview, \"oZdCf2+GPfd/a/+kvUY23P1iQ9c=\");\n\n_c3 = InstaPreview;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ImageContainer\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"InstaPreview\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/Sections/InstaPreview.js"],"names":["React","useEffect","useState","retrieveIG","Wrapper","Spinner","styled","ImageContainer","div","Image","img","InstaPreview","posts","setPosts","isLoaded","setIsLoaded","then","res","cleanup","map","post","media_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,WAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,c;AAWN,MAAME,KAAK,GAAGH,MAAM,CAACI,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,K;AAUN,eAAe,SAASE,YAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACbE,IAAAA,UAAU,GACTa,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACAF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD;AAKA,WAAO,SAASG,OAAT,GAAmB;AACtBH,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAFD;AAGH,GATQ,EASP,EATO,CAAT;;AAYI,MAAGD,QAAH,EAAY;AACR,wBACI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAA,gBACUF,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACZ,QAAC,cAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,IAAI,CAACC,SAAjB;AAA4B,UAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF;AADV;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD,MAWI;AACA,wBACI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAA,6BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACR;;GAlCuBV,Y;;MAAAA,Y","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {retrieveIG} from '../../service/IGService';\nimport {Wrapper, Spinner} from '../Styled'\nimport styled from \"styled-components\";\n\nconst ImageContainer = styled.div`\n    float:left;\n    position: relative;\n    width: 30%;\n    padding-bottom : 30%; /* = width for a 1:1 aspect ratio */\n    margin:1.66%;\n    background-position:center center;\n    background-repeat:no-repeat;\n    background-size:cover; /* you change this to \"contain\" if you don't want the images to be cropped */\n`\n\nconst Image = styled.img`\n    width:100%;\n    height:100%;\n    object-fit: cover;\n    display:inline-block; \n    @media (max-width: 45em) {\n        width: 100%;\n    }\n`\n\nexport default function InstaPreview () {\n    const [posts, setPosts] = useState()\n    const [isLoaded, setIsLoaded] = useState()\n\n    useEffect( () => {   \n        retrieveIG()\n        .then(res => {\n            setPosts(res)\n            setIsLoaded(true)\n        })\n        return function cleanup() {\n            setIsLoaded(false);\n        }\n    },[])\n\n\n        if(isLoaded){\n            return (\n                <Wrapper id=\"ig\">\n                        { posts.map(post => (\n                            <ImageContainer>\n                                <Image src={post.media_url} alt=\"\"/>\n                            </ImageContainer>\n                        ))}\n                </Wrapper>\n            )\n        }\n        else{\n            return (\n                <Wrapper id=\"ig\">\n                    <Spinner/>\n                </Wrapper>\n            )\n        }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}