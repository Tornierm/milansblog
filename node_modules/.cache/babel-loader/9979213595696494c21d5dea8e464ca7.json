{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/Sections/InstaPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { retrieveIG } from '../../service/IGService';\nimport { Wrapper, Spinner } from '../Styled';\nimport styled, { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    justify-items: center;\n    grid-gap 1em;\n`;\n_c = ImageGrid;\nconst ImageContainer = styled.div`\n    position: relative;\n    width: 100%;\n    grid-column: span 1;\n    padding-bottom : 100%; /* = width for a 1:1 aspect ratio */\n    background-image:url(${props => props.image});\n    background-position:center center;\n    background-repeat:no-repeat;\n    background-size:cover; \n    ${({\n  clicked\n}) => clicked && css`\n        grid-column: span 2;\n  `}\n`;\n_c2 = ImageContainer;\nexport default function InstaPreview() {\n  _s();\n\n  const [posts, setPosts] = useState();\n  const [isLoaded, setIsLoaded] = useState();\n  useEffect(() => {\n    retrieveIG().then(res => {\n      setPosts(res);\n      setIsLoaded(true);\n    });\n    return function cleanup() {\n      setIsLoaded(false);\n    };\n  }, []);\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      id: \"ig\",\n      children: /*#__PURE__*/_jsxDEV(ImageGrid, {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(ImageContainer, {\n          clicked: true,\n          image: post.media_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      id: \"ig\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(InstaPreview, \"oZdCf2+GPfd/a/+kvUY23P1iQ9c=\");\n\n_c3 = InstaPreview;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ImageGrid\");\n$RefreshReg$(_c2, \"ImageContainer\");\n$RefreshReg$(_c3, \"InstaPreview\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/Sections/InstaPreview.js"],"names":["React","useEffect","useState","retrieveIG","Wrapper","Spinner","styled","css","ImageGrid","div","ImageContainer","props","image","clicked","InstaPreview","posts","setPosts","isLoaded","setIsLoaded","then","res","cleanup","map","post","media_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,WAA/B;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,cAAc,GAAGJ,MAAM,CAACG,GAAI;AAClC;AACA;AACA;AACA;AACA,2BAA2BE,KAAK,IAAIA,KAAK,CAACC,KAAM;AAChD;AACA;AACA;AACA,MAAM,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiBA,OAAO,IAAIN,GAAI;AACtC;AACA,GAAI;AACJ,CAZA;MAAMG,c;AAeN,eAAe,SAASI,YAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACbE,IAAAA,UAAU,GACTgB,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACAF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD;AAKA,WAAO,SAASG,OAAT,GAAmB;AACtBH,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAFD;AAGH,GATQ,EASP,EATO,CAAT;;AAYI,MAAGD,QAAH,EAAY;AACR,wBACI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAA,6BACI,QAAC,SAAD;AAAA,kBACMF,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACZ,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAE,IAAzB;AAA+B,UAAA,KAAK,EAAEA,IAAI,CAACC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,MAYI;AACA,wBACI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAA,6BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACR;;GAnCuBV,Y;;MAAAA,Y","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {retrieveIG} from '../../service/IGService';\nimport {Wrapper, Spinner} from '../Styled'\nimport styled, {css} from \"styled-components\";\n\nconst ImageGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    justify-items: center;\n    grid-gap 1em;\n`\n\nconst ImageContainer = styled.div`\n    position: relative;\n    width: 100%;\n    grid-column: span 1;\n    padding-bottom : 100%; /* = width for a 1:1 aspect ratio */\n    background-image:url(${props => props.image});\n    background-position:center center;\n    background-repeat:no-repeat;\n    background-size:cover; \n    ${({ clicked }) => clicked && css`\n        grid-column: span 2;\n  `}\n`\n\n\nexport default function InstaPreview () {\n    const [posts, setPosts] = useState()\n    const [isLoaded, setIsLoaded] = useState()\n\n    useEffect( () => {   \n        retrieveIG()\n        .then(res => {\n            setPosts(res)\n            setIsLoaded(true)\n        })\n        return function cleanup() {\n            setIsLoaded(false);\n        }\n    },[])\n\n\n        if(isLoaded){\n            return (\n                <Wrapper id=\"ig\">\n                    <ImageGrid>\n                        { posts.map(post => (\n                            <ImageContainer clicked={true} image={post.media_url}>\n                            </ImageContainer>\n                        ))}\n                    </ImageGrid>\n                </Wrapper>\n            )\n        }\n        else{\n            return (\n                <Wrapper id=\"ig\">\n                    <Spinner/>\n                </Wrapper>\n            )\n        }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}