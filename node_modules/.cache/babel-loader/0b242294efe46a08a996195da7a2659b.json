{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/Comments/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { Button } from '../Styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n    display:flex;\n    flex-direction:column;\n    padding:1em;\n`;\n_c = Form;\nconst Label = styled.label``;\n_c2 = Label;\nconst Input = styled.input`\nwidth=100%;\n`;\n_c3 = Input;\nconst Info = styled.div`\n    display:flex;\n    justify-content:left;\n`;\n_c4 = Info;\nconst FormItem = styled.div`\n    display:flex;\n    Flex-Direction:column;\n    width:100%;\n`;\n_c5 = FormItem;\nexport default function CommentForm(props) {\n  _s();\n\n  const [parent] = useState(props.parent);\n  const [post] = useState(props.post);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = JSON.stringify({\n      post: post,\n      author_name: name,\n      author_email: email,\n      content: comment,\n      parent: parent\n    });\n    console.log(data);\n    axios({\n      method: 'post',\n      url: `/wp-json/wp/v2/comments`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    }).then(res => console.log(res)).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit.bind(this),\n    children: [/*#__PURE__*/_jsxDEV(Info, {\n      children: [/*#__PURE__*/_jsxDEV(FormItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: name,\n          onChange: event => {\n            setName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: event => {\n            setEmail(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"comment\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"comment\",\n        name: \"comment\",\n        value: comment,\n        onChange: event => {\n          setComment(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CommentForm, \"vcJ0hpwq8rgu+qw1NpxJ95rpWUE=\");\n\n_c6 = CommentForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Info\");\n$RefreshReg$(_c5, \"FormItem\");\n$RefreshReg$(_c6, \"CommentForm\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/Comments/CommentForm.js"],"names":["useState","styled","axios","Button","Form","form","Label","label","Input","input","Info","div","FormItem","CommentForm","props","parent","post","name","setName","email","setEmail","comment","setComment","handleSubmit","event","preventDefault","data","JSON","stringify","author_name","author_email","content","console","log","method","url","headers","then","res","catch","err","error","bind","target","value"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios';\nimport {Button} from '../Styled'\n\n\nconst Form = styled.form`\n    display:flex;\n    flex-direction:column;\n    padding:1em;\n`\nconst Label = styled.label``\n\nconst Input = styled.input`\nwidth=100%;\n`\n\nconst Info = styled.div`\n    display:flex;\n    justify-content:left;\n`\nconst FormItem = styled.div`\n    display:flex;\n    Flex-Direction:column;\n    width:100%;\n`\n\n\nexport default function CommentForm(props) {\n    const [parent] = useState(props.parent)\n    const [post] = useState(props.post)\n    \n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [comment, setComment] = useState('')\n\n    const handleSubmit = (event) =>{\n        \n        event.preventDefault();\n        const data = JSON.stringify({\n            post: post,\n            author_name: name,\n            author_email: email,\n            content:comment,\n            parent:parent\n          });\n\n          console.log(data);\n        axios({\n            method: 'post',\n            url: `/wp-json/wp/v2/comments`,\n            headers: {'Content-Type': 'application/json'}, \n            data: data\n        })\n        .then(res => console.log(res))\n        .catch(err => console.error(err))\n      }\n\n        return (\n            <Form onSubmit={handleSubmit.bind(this)}>\n                <Info>\n                    <FormItem>\n                        <Label htmlFor=\"name\">Name</Label>\n                        <Input type=\"text\" id=\"name\" name=\"name\" value={name} onChange={(event) => {setName(event.target.value)}}/>\n                    </FormItem>\n                    <FormItem>\n                        <Label htmlFor=\"email\">E-mail</Label>\n                        <Input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={(event) => {setEmail(event.target.value)}}/>\n                    </FormItem>\n                </Info>\n                <FormItem>\n                    <Label htmlFor=\"comment\">Comment</Label>\n                    <Input type=\"text\" id=\"comment\" name=\"comment\" value={comment} onChange={(event) => {setComment(event.target.value)}}/>\n                </FormItem>\n                <Button type=\"submit\">Submit</Button>\n            </Form>\n        );\n    }\n\n"]},"metadata":{},"sourceType":"module"}