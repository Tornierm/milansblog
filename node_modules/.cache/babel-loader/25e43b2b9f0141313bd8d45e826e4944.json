{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/Comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CommentItem from './CommentItem';\nimport CommentForm from './CommentForm';\nimport { retrieveComments } from '../../service/WPService';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Buttons = styled.div`\n    display:flex;\n    justify-content:space-between;\n    p{\n        margin:0;\n    }\n`;\n_c = Buttons;\nconst Button = styled.button`\n    border: none;\n    background-color: transparent;\n    color: var(--secondary)\n`;\n_c2 = Button;\nexport default function Comments(props) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [id] = useState(props.post);\n  const [parent] = useState(props.parent);\n  const [updated, setUpdated] = useState(false);\n  const [hideForm, setHideForm] = useState(false);\n  const [hideReplies, setHideReplies] = useState(false);\n  const [depth] = useState(props.depth);\n  useEffect(() => {\n    retrieveComments(id, parent).then(res => setComments(res), setLoaded(true), setUpdated(false));\n  }, [id, parent, updated]);\n\n  const showReplies = () => {\n    setHideReplies(!hideReplies);\n  };\n\n  const showForm = () => {\n    setHideForm(!hideForm);\n  };\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Buttons, {\n        children: [depth === 1 && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showReplies(),\n          children: \"Show replies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 39\n        }, this), depth === 1 && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showForm(),\n          children: \"reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), hideForm | depth === 0 && /*#__PURE__*/_jsxDEV(CommentForm, {\n        updated: a => setUpdated(a),\n        post: id\n      }, 'commentForm', false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), hideReplies | depth === 0 && comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        depth: depth + 1,\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  } else {\n    return 'loading...';\n  }\n}\n\n_s(Comments, \"VoJu7GrFpMVr8aoJoVCJ+HfdfFg=\");\n\n_c3 = Comments;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Comments\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/Comments/Comments.js"],"names":["useState","useEffect","CommentItem","CommentForm","retrieveComments","styled","Buttons","div","Button","button","Comments","props","comments","setComments","loaded","setLoaded","id","post","parent","updated","setUpdated","hideForm","setHideForm","hideReplies","setHideReplies","depth","then","res","showReplies","showForm","a","map","comment"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nimport CommentItem from './CommentItem'\nimport CommentForm from './CommentForm'\nimport {retrieveComments} from '../../service/WPService'\nimport styled from 'styled-components'\n\nconst Buttons = styled.div`\n    display:flex;\n    justify-content:space-between;\n    p{\n        margin:0;\n    }\n`\n\nconst Button = styled.button`\n    border: none;\n    background-color: transparent;\n    color: var(--secondary)\n`\n\nexport default function Comments(props) {\n\n    const [comments, setComments] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    const [id]  = useState(props.post)\n    const [parent] = useState(props.parent)\n    const [updated, setUpdated] = useState(false);\n\n    const [hideForm, setHideForm] = useState(false);\n    const [hideReplies, setHideReplies] = useState(false);\n\n    const [depth] = useState(props.depth)\n    \n    useEffect( () => {\n\n        retrieveComments(id, parent).then( res =>\n            setComments(res),\n            setLoaded(true),\n            setUpdated(false)\n        )\n\n    }, [id, parent, updated])\n\n    const showReplies = () => {\n        setHideReplies(!hideReplies);\n    }\n\n    const showForm = () => {\n        setHideForm(!hideForm);\n    }\n\n        if(loaded){\n            return (\n                <div>\n                    <Buttons>\n                        {depth===1 && <Button onClick={() => showReplies()}>Show replies</Button> }\n                        {depth===1 && <Button onClick={() => showForm()}>reply</Button>}\n                    </Buttons>\n                    {(hideForm|depth===0) && \n                        <CommentForm\n                            updated={a => setUpdated(a)} \n                            post={id}\n                            key={'commentForm'} \n                        />\n                    }\n                    {(hideReplies|depth===0) && comments.map(comment => (\n                        <CommentItem \n                            depth={depth+1}\n                            key={comment.id} \n                            comment={comment}\n                        />\n                    ))}\n                </div>\n            )\n        } else {\n            return 'loading...'\n        }\n}\n\n"]},"metadata":{},"sourceType":"module"}