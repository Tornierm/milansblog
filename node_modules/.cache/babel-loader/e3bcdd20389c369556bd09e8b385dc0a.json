{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/PostPage.js\";\nimport React, { Component } from 'react';\nimport { Wrapper, Loading } from './Styled';\nimport styled from 'styled-components';\nimport Comments from './Comments/Comments';\nimport { retrieveFeaturedMedia, retrievePost } from '../service/WPService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Article = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n_c = Article;\nconst Info = styled.div`\n    background: url(${props => props.img}) no-repeat center center fixed; \n    width:100%vw;\n    height:100%vh;\n`;\n_c2 = Info;\nconst Title = styled.h1`\n    \n`;\nconst Image = styled.img`\n    width:1000px;\n    height:35em;\n    object-fit: cover;\n    display:block;\n`;\nconst Content = styled.div`\n    background-color: white;\n    transform: translate(0em, -5em);\n    margin: 0rem 2rem;\n    padding:2rem;\n\n`;\n_c3 = Content;\nexport class PostPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: '',\n      imageUrl: '',\n      isLoaded: false,\n      depth: 0\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    retrievePost(id).then(res => {\n      this.setState({\n        post: res\n      });\n      return retrieveFeaturedMedia(res.featured_media);\n    }).then(res => {\n      this.setState({\n        imageUrl: res.media_details.sizes.full.source_url,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      depth,\n      post,\n      isLoaded,\n      imageUrl\n    } = this.state;\n\n    if (isLoaded) {\n      return /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Article, {\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            img: imageUrl,\n            children: /*#__PURE__*/_jsxDEV(Titel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Content, {\n            dangerouslySetInnerHTML: {\n              __html: post.content.rendered\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Comments, {\n          parent: \"0\",\n          post: post.id,\n          depth: depth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Loading, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\nexport default PostPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Article\");\n$RefreshReg$(_c2, \"Info\");\n$RefreshReg$(_c3, \"Content\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/PostPage.js"],"names":["React","Component","Wrapper","Loading","styled","Comments","retrieveFeaturedMedia","retrievePost","Article","article","Info","div","props","img","Title","h1","Image","Content","PostPage","state","post","imageUrl","isLoaded","depth","componentDidMount","id","match","params","then","res","setState","featured_media","media_details","sizes","full","source_url","render","__html","content","rendered"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,qBAAT,EAAgCC,YAAhC,QAAoD,sBAApD;;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,OAAQ;AAC/B;AACA;AACA;AACA;AACA,CALA;KAAMD,O;AAON,MAAME,IAAI,GAAGN,MAAM,CAACO,GAAI;AACxB,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,GAAI;AACzC;AACA;AACA,CAJA;MAAMH,I;AAMN,MAAMI,KAAK,GAAGV,MAAM,CAACW,EAAG;AACxB;AACA,CAFA;AAIA,MAAMC,KAAK,GAAGZ,MAAM,CAACS,GAAI;AACzB;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMI,OAAO,GAAGb,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMM,O;AAQN,OAAO,MAAMC,QAAN,SAAuBjB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAEpCkB,KAFoC,GAE5B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,QAAQ,EAAE,KAHN;AAIJC,MAAAA,KAAK,EAAC;AAJF,KAF4B;AAAA;;AASpCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKb,KAAL,CAAWc,KAAX,CAAiBC,MAAhC;AACApB,IAAAA,YAAY,CAACkB,EAAD,CAAZ,CACCG,IADD,CACOC,GAAG,IAAG;AACT,WAAKC,QAAL,CAAc;AACVV,QAAAA,IAAI,EAAES;AADI,OAAd;AAGA,aAAOvB,qBAAqB,CAACuB,GAAG,CAACE,cAAL,CAA5B;AACH,KAND,EAOCH,IAPD,CAOMC,GAAG,IAAI;AACT,WAAKC,QAAL,CAAc;AACVT,QAAAA,QAAQ,EAAGQ,GAAG,CAACG,aAAJ,CAAkBC,KAAlB,CAAwBC,IAAxB,CAA6BC,UAD9B;AAEVb,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KAZD;AAcH;;AAEDc,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACb,MAAAA,KAAD;AAAQH,MAAAA,IAAR;AAAcE,MAAAA,QAAd;AAAwBD,MAAAA;AAAxB,QAAqC,KAAKF,KAAhD;;AACA,QAAGG,QAAH,EAAY;AACR,0BACA,QAAC,OAAD;AAAA,gCACI,QAAC,OAAD;AAAA,kCACA,QAAC,IAAD;AAAM,YAAA,GAAG,EAAED,QAAX;AAAA,mCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADA,eAKI,QAAC,OAAD;AAAS,YAAA,uBAAuB,EAAE;AAACgB,cAAAA,MAAM,EAAEjB,IAAI,CAACkB,OAAL,CAAaC;AAAtB;AAAlC;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAC,GAAjB;AAAqB,UAAA,IAAI,EAAEnB,IAAI,CAACK,EAAhC;AAAoC,UAAA,KAAK,EAAEF;AAA3C;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAYH,KAbD,MAaO;AACH,0BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AA/CmC;AAkDxC,eAAeL,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Wrapper, Loading} from './Styled'\nimport styled from 'styled-components'\nimport Comments from './Comments/Comments'\nimport { retrieveFeaturedMedia, retrievePost } from '../service/WPService';\n\nconst Article = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Info = styled.div`\n    background: url(${props => props.img}) no-repeat center center fixed; \n    width:100%vw;\n    height:100%vh;\n`\n\nconst Title = styled.h1`\n    \n`\n\nconst Image = styled.img`\n    width:1000px;\n    height:35em;\n    object-fit: cover;\n    display:block;\n`\n\nconst Content = styled.div`\n    background-color: white;\n    transform: translate(0em, -5em);\n    margin: 0rem 2rem;\n    padding:2rem;\n\n`\n\nexport class PostPage extends Component {\n\n    state =Â {\n        post: '',\n        imageUrl: '',\n        isLoaded: false,\n        depth:0\n    }\n\n    componentDidMount(){        \n        const { id } = this.props.match.params;\n        retrievePost(id)\n        .then( res =>{\n            this.setState({\n                post: res,\n            })\n            return retrieveFeaturedMedia(res.featured_media)\n        })\n        .then(res => {\n            this.setState({\n                imageUrl : res.media_details.sizes.full.source_url,\n                isLoaded: true\n            })\n        })\n\n    }\n\n    render(){ \n        const {depth, post, isLoaded, imageUrl } = this.state;\n        if(isLoaded){\n            return(\n            <Wrapper>\n                <Article>\n                <Info img={imageUrl}>\n                    <Titel>\n                    </Titel>\n                </Info>\n                    <Content dangerouslySetInnerHTML={{__html: post.content.rendered}}/>\n                </Article>\n                <Comments parent=\"0\" post={post.id} depth={depth}/>\n            </Wrapper>\n            )\n        } else {\n            return (\n                <Loading>Loading...</Loading>\n            )\n        }\n    }\n  }\n\nexport default PostPage\n"]},"metadata":{},"sourceType":"module"}