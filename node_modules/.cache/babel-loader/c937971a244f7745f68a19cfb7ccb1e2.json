{"ast":null,"code":"import _slicedToArray from\"/Users/milantornier/Desktop/MySite/milansblog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/milantornier/Desktop/MySite/milansblog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useEffect}from'react';import{retrievePostsByCategory}from'../service/WPService';import PostItem from'../components/Posts/PostItem';import styled from\"styled-components\";import{Wrapper,Loading,Spinner}from'../components/Styled';import{jsx as _jsx}from\"react/jsx-runtime\";var PostSection=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding: 0em 1em 5em 1em;\\n    padding-top: calc(var(--navbar-height) + 2em);\\n    @media (max-width: 45em) {\\n        padding: 0em 1em 1em 1em;\\n        display:flex;\\n        flex-direction:column;\\n        align-items:center;    \\n    }\\n\"])));export default function Posts(props){var _useState=useState(props.category),_useState2=_slicedToArray(_useState,1),category=_useState2[0];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoaded=_useState6[0],setIsLoaded=_useState6[1];useEffect(function(){console.log(category);retrievePostsByCategory(category).then(function(res){setPosts(res);setIsLoaded(true);}).catch(function(err){return console.log(err);});},[category]);if(isLoaded){return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsx(PostSection,{children:posts.map(function(post){return/*#__PURE__*/_jsx(PostItem,{post:post},post.id);})})});}else{return/*#__PURE__*/_jsx(Loading,{children:/*#__PURE__*/_jsx(Spinner,{})});}}","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/Pages/Posts.js"],"names":["React","useState","useEffect","retrievePostsByCategory","PostItem","styled","Wrapper","Loading","Spinner","PostSection","div","Posts","props","category","posts","setPosts","isLoaded","setIsLoaded","console","log","then","res","catch","err","map","post","id"],"mappings":"4WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,uBAAT,KAAwC,sBAAxC,CACA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAAQC,OAAR,CAAiBC,OAAjB,CAA0BC,OAA1B,KAAwC,sBAAxC,C,2CAEA,GAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAACK,GAAV,wTAAjB,CAWA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAEjC,cAAmBX,QAAQ,CAACW,KAAK,CAACC,QAAP,CAA3B,wCAAOA,QAAP,eACA,eAA0BZ,QAAQ,CAAC,EAAD,CAAlC,yCAAOa,KAAP,eAAcC,QAAd,eACA,eAAgCd,QAAQ,CAAC,KAAD,CAAxC,yCAAOe,QAAP,eAAiBC,WAAjB,eAEAf,SAAS,CAAE,UAAM,CACbgB,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAEAV,uBAAuB,CAACU,QAAD,CAAvB,CACCO,IADD,CACM,SAAAC,GAAG,CAAI,CACTN,QAAQ,CAACM,GAAD,CAAR,CACAJ,WAAW,CAAC,IAAD,CAAX,CACH,CAJD,EAKCK,KALD,CAKO,SAAAC,GAAG,QAAIL,CAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAJ,EALV,EAQH,CAXQ,CAWP,CAACV,QAAD,CAXO,CAAT,CAaA,GAAGG,QAAH,CAAY,CACR,mBACI,KAAC,OAAD,wBACI,KAAC,WAAD,WACMF,KAAK,CAACU,GAAN,CAAU,SAAAC,IAAI,qBACZ,KAAC,QAAD,EAAwB,IAAI,CAAEA,IAA9B,EAAeA,IAAI,CAACC,EAApB,CADY,EAAd,CADN,EADJ,EADJ,CASH,CAVD,IAUO,CACP,mBACI,KAAC,OAAD,wBAAS,KAAC,OAAD,IAAT,EADJ,CAGC,CACJ","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { retrievePostsByCategory } from '../service/WPService';\nimport PostItem from '../components/Posts/PostItem'\nimport styled from \"styled-components\";\nimport {Wrapper, Loading, Spinner} from '../components/Styled'\n\nconst PostSection = styled.div`\n    padding: 0em 1em 5em 1em;\n    padding-top: calc(var(--navbar-height) + 2em);\n    @media (max-width: 45em) {\n        padding: 0em 1em 1em 1em;\n        display:flex;\n        flex-direction:column;\n        align-items:center;    \n    }\n`\n\nexport default function Posts(props) {\n\n    const [category] = useState(props.category)\n    const [posts, setPosts] = useState([])\n    const [isLoaded, setIsLoaded] = useState(false)\n\n    useEffect( () => {\n        console.log(category)\n\n        retrievePostsByCategory(category)\n        .then(res => {\n            setPosts(res)\n            setIsLoaded(true)\n        })\n        .catch(err => console.log(err));\n\n\n    },[category])\n\n    if(isLoaded){\n        return (\n            <Wrapper>\n                <PostSection>\n                    { posts.map(post => (\n                        <PostItem key={post.id} post={post}/>\n                    ))}\n                </PostSection>\n            </Wrapper>\n        )\n    } else {\n    return(               \n        <Loading><Spinner/></Loading>\n    )\n    }\n}"]},"metadata":{},"sourceType":"module"}