{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/Comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CommentItem from './CommentItem';\nimport CommentForm from './CommentForm';\nimport { retrieveComments } from '../../service/WPService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(props) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [id] = useState(props.post);\n  const [parent] = useState(props.parent);\n  useEffect(() => {\n    const data = retrieveComments(id, parent);\n    setComments(data);\n    console.log(comments);\n    console.log(comments.lenght);\n\n    if (comments.length > 1) {\n      setLoaded(true);\n    }\n\n    setUpdated(false);\n  }, [id, parent, updated]);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [parent === \"0\" && /*#__PURE__*/_jsxDEV(CommentForm, {\n        updated: a => setUpdated(a),\n        post: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  } else {\n    return 'loading...';\n  }\n}\n\n_s(Comments, \"mbdG7dI315gtOfoq7qKnd98ixAo=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/Comments/Comments.js"],"names":["useState","useEffect","CommentItem","CommentForm","retrieveComments","Comments","props","comments","setComments","loaded","setLoaded","id","post","parent","data","console","log","lenght","length","setUpdated","updated","a","map","comment"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,EAAD,IAAQX,QAAQ,CAACM,KAAK,CAACM,IAAP,CAAtB;AACA,QAAM,CAACC,MAAD,IAAWb,QAAQ,CAACM,KAAK,CAACO,MAAP,CAAzB;AAEAZ,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMa,IAAI,GAAGV,gBAAgB,CAACO,EAAD,EAAKE,MAAL,CAA7B;AACAL,IAAAA,WAAW,CAACM,IAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACU,MAArB;;AAEA,QAAGV,QAAQ,CAACW,MAAT,GAAgB,CAAnB,EAAqB;AACjBR,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AACDS,IAAAA,UAAU,CAAC,KAAD,CAAV;AACC,GAVI,EAUF,CAACR,EAAD,EAAKE,MAAL,EAAaO,OAAb,CAVE,CAAT;;AAYI,MAAGX,MAAH,EAAU;AACN,wBACI;AAAA,iBACKI,MAAM,KAAG,GAAT,iBACG,QAAC,WAAD;AACI,QAAA,OAAO,EAAEQ,CAAC,IAAIF,UAAU,CAACE,CAAD,CAD5B;AAEI,QAAA,IAAI,EAAEV;AAFV;AAAA;AAAA;AAAA;AAAA,cAFR,EAOKJ,QAAQ,CAACe,GAAT,CAAaC,OAAO,iBACjB,QAAC,WAAD;AAEI,QAAA,OAAO,EAAEA;AAFb,SACSA,OAAO,CAACZ,EADjB;AAAA;AAAA;AAAA;AAAA,cADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBD,MAiBO;AACH,WAAO,YAAP;AACH;AACR;;GAvCuBN,Q;;KAAAA,Q","sourcesContent":["import {useState, useEffect} from 'react'\nimport CommentItem from './CommentItem'\nimport CommentForm from './CommentForm'\nimport {retrieveComments} from '../../service/WPService'\n\n\nexport default function Comments(props) {\n\n    const [comments, setComments] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    const [id]  = useState(props.post)\n    const [parent] = useState(props.parent)\n    \n    useEffect( () => {\n        const data = retrieveComments(id, parent)\n        setComments(data)\n        console.log(comments)\n        console.log(comments.lenght)\n\n        if(comments.length>1){\n            setLoaded(true)\n        }\n        setUpdated(false)\n        }, [id, parent, updated])\n\n        if(loaded){\n            return (\n                <div>\n                    {parent===\"0\" && \n                        <CommentForm \n                            updated={a => setUpdated(a)} \n                            post={id}\n                        />\n                    }\n                    {comments.map(comment => (\n                        <CommentItem \n                            key={comment.id} \n                            comment={comment}\n                        />\n                    ))}\n                </div>\n            )\n        } else {\n            return 'loading...'\n        }\n}\n\n"]},"metadata":{},"sourceType":"module"}