{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/components/Sections/InstaPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { retrieveIG } from '../../service/IGService';\nimport { Wrapper, Loading } from '../Styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InstaPreview() {\n  _s();\n\n  const [posts, setPosts] = useState();\n  const [isLoaded, setIsLoaded] = useState();\n\n  const setStuff = async () => {\n    const ig = await retrieveIG();\n    console.log(ig);\n    setPosts(ig);\n\n    if (posts === null) {\n      return;\n    }\n\n    setIsLoaded(true);\n  };\n\n  useEffect(() => {\n    setStuff();\n    return function cleanup() {\n      setIsLoaded(false);\n    };\n  }, [setStuff]);\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      id: \"ig\",\n      children: \"insta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      id: \"ig\",\n      children: \" Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this);\n  }\n}\n\n_s(InstaPreview, \"oZdCf2+GPfd/a/+kvUY23P1iQ9c=\");\n\n_c = InstaPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstaPreview\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/components/Sections/InstaPreview.js"],"names":["React","useEffect","useState","retrieveIG","Wrapper","Loading","InstaPreview","posts","setPosts","isLoaded","setIsLoaded","setStuff","ig","console","log","cleanup"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,WAA/B;;AAGA,eAAe,SAASC,YAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;;AAGA,QAAMS,QAAQ,GAAG,YAAY;AACzB,UAAMC,EAAE,GAAG,MAAMT,UAAU,EAA3B;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAJ,IAAAA,QAAQ,CAACI,EAAD,CAAR;;AACA,QAAGL,KAAK,KAAG,IAAX,EAAgB;AACZ;AACH;;AACDG,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GARD;;AAUAT,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,QAAQ;AAER,WAAO,SAASI,OAAT,GAAmB;AACtBL,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAFD;AAGH,GANQ,EAMP,CAACC,QAAD,CANO,CAAT;;AASI,MAAGF,QAAH,EAAY;AACR,wBACI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOI;AACA,wBAAO,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACR;;GAlCuBH,Y;;KAAAA,Y","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {retrieveIG} from '../../service/IGService';\nimport {Wrapper, Loading} from '../Styled'\n\n\nexport default function InstaPreview () {\n    const [posts, setPosts] = useState()\n    const [isLoaded, setIsLoaded] = useState()\n\n\n    const setStuff = async () => {\n        const ig = await retrieveIG();\n        console.log(ig)\n        setPosts(ig)\n        if(posts===null){\n            return;\n        }\n        setIsLoaded(true)\n    }\n\n    useEffect( () => {   \n        setStuff()\n\n        return function cleanup() {\n            setIsLoaded(false);\n        }\n    },[setStuff])\n\n\n        if(isLoaded){\n            return (\n                <Wrapper id=\"ig\">\n                    insta\n                </Wrapper>\n            )\n        }\n        else{\n            return <Loading id=\"ig\"> Loading ...</Loading>\n        }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}