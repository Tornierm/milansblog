{"ast":null,"code":"var _jsxFileName = \"/Users/milantornier/Desktop/MySite/milansblog/src/Sections/PostSlider/PostSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { retrievePostsByCategory } from '../../service/WPService'; // Import Swiper React components\n\nimport styled from \"styled-components\";\nimport { Wrapper, Loading, Spinner } from './../components/Styled';\nimport PostSliderItem from './PostSliderItem'; // Import Swiper styles\n\nimport 'swiper/swiper-bundle.css';\nimport 'swiper/components/navigation';\nimport 'swiper/components/pagination'; // import Swiper core and required modules\n\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Navigation, Pagination]);\nconst SwiperWrapper = styled(Wrapper)`\n  display:flex;\n  flex-direction:column;\n\n  .swiper-container{\n    .swiper-button-prev{\n      color:var(--s-3);\n      outline:none;\n    }\n    .swiper-button-next{\n      color:var(--s-3);\n      outline:none;\n\n    }\n    .swiper-pagination-bullet{\n      background-color:var(--s-3);\n    }\n    .swiper-pagination-bullet-active{\n      background-color:var(--s-3);\n    } \n  }\n  .swiper-slide{\n    margin:1em 0;\n    padding:1em 0;\n    display:flex;\n    justify-content:center;\n  }\n  @media (max-width: 640px) {\n    max-width: 640px;\n    width:100%;\n  }\n  @media (max-width: 768px) {\n    max-width: 768px;\n  }\n`;\nconst SwiperContainer = styled.div`\n  \n`;\n\nconst createPostSliderItems = posts => {\n  let postSliderItems = [];\n\n  for (let i; i < posts.lenght; i++) {\n    postSliderItems.push( /*#__PURE__*/_jsxDEV(PostSliderItem, {\n      post: post[i]\n    }, posts[i].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this));\n  }\n\n  return postSliderItems;\n};\n\nexport default function PostSlider(props) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [sliderItems, setSliderItems] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    retrievePostsByCategory(props.category).then(res => {\n      setPosts(res);\n      setSliderItems(createPostSLiderItems(posts));\n      setIsLoaded(true);\n    }).catch(err => console.log(err));\n  }, [props.category]);\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(Slider, {\n      Items: sliderItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PostSlider, \"hJNs1W5pggDzMI2WzZqi85i7Ado=\");\n\n_c = PostSlider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostSlider\");","map":{"version":3,"sources":["/Users/milantornier/Desktop/MySite/milansblog/src/Sections/PostSlider/PostSlider.js"],"names":["React","useState","useEffect","retrievePostsByCategory","styled","Wrapper","Loading","Spinner","PostSliderItem","SwiperCore","Navigation","Pagination","use","SwiperWrapper","SwiperContainer","div","createPostSliderItems","posts","postSliderItems","i","lenght","push","post","id","PostSlider","props","setPosts","sliderItems","setSliderItems","isLoaded","setIsLoaded","category","then","res","createPostSLiderItems","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,uBAAT,QAAwC,yBAAxC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAwC,wBAAxC;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;AACA,OAAO,0BAAP;AACA,OAAO,8BAAP;AACA,OAAO,8BAAP,C,CAGA;;AACA,OAAOC,UAAP,IACEC,UADF,EACcC,UADd,QAEO,QAFP;;AAIAF,UAAU,CAACG,GAAX,CAAe,CAACF,UAAD,EAAaC,UAAb,CAAf;AAEA,MAAME,aAAa,GAAGT,MAAM,CAACC,OAAD,CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCA;AAoCA,MAAMS,eAAe,GAAGV,MAAM,CAACW,GAAI;AACnC;AACA,CAFA;;AAIA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACrC,MAAIC,eAAe,GAAG,EAAtB;;AACA,OAAI,IAAIC,CAAR,EAAWA,CAAC,GAACF,KAAK,CAACG,MAAnB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3BD,IAAAA,eAAe,CAACG,IAAhB,eAAqB,QAAC,cAAD;AAAkC,MAAA,IAAI,EAAEC,IAAI,CAACH,CAAD;AAA5C,OAAqBF,KAAK,CAACE,CAAD,CAAL,CAASI,EAA9B;AAAA;AAAA;AAAA;AAAA,YAArB;AACH;;AACD,SAAOL,eAAP;AACH,CAND;;AAQA,eAAe,SAASM,UAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEzC,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AAEfC,IAAAA,uBAAuB,CAACsB,KAAK,CAACM,QAAP,CAAvB,CACCC,IADD,CACMC,GAAG,IAAI;AACTP,MAAAA,QAAQ,CAACO,GAAD,CAAR;AACAL,MAAAA,cAAc,CAACM,qBAAqB,CAACjB,KAAD,CAAtB,CAAd;AACAa,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KALD,EAMCK,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANd;AAOD,GATQ,EASP,CAACX,KAAK,CAACM,QAAP,CATO,CAAT;;AAWA,MAAGF,QAAH,EAAY;AACV,wBACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEF;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD,GAJD,MAIO;AACP,wBACI,QAAC,OAAD;AAAA,6BAAS,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ;AAGC;AACF;;GA1BuBH,U;;KAAAA,U;AA0BvB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { retrievePostsByCategory } from '../../service/WPService';\n// Import Swiper React components\nimport styled from \"styled-components\";\nimport {Wrapper, Loading, Spinner} from './../components/Styled';\nimport PostSliderItem from './PostSliderItem'\n\n// Import Swiper styles\nimport 'swiper/swiper-bundle.css';\nimport 'swiper/components/navigation';\nimport 'swiper/components/pagination';\n\n\n// import Swiper core and required modules\nimport SwiperCore, {\n  Navigation, Pagination\n} from 'swiper';\n\nSwiperCore.use([Navigation, Pagination]);\n\nconst SwiperWrapper = styled(Wrapper)`\n  display:flex;\n  flex-direction:column;\n\n  .swiper-container{\n    .swiper-button-prev{\n      color:var(--s-3);\n      outline:none;\n    }\n    .swiper-button-next{\n      color:var(--s-3);\n      outline:none;\n\n    }\n    .swiper-pagination-bullet{\n      background-color:var(--s-3);\n    }\n    .swiper-pagination-bullet-active{\n      background-color:var(--s-3);\n    } \n  }\n  .swiper-slide{\n    margin:1em 0;\n    padding:1em 0;\n    display:flex;\n    justify-content:center;\n  }\n  @media (max-width: 640px) {\n    max-width: 640px;\n    width:100%;\n  }\n  @media (max-width: 768px) {\n    max-width: 768px;\n  }\n`\n\nconst SwiperContainer = styled.div`\n  \n`\n\nconst createPostSliderItems = (posts) => {\n    let postSliderItems = [];\n    for(let i; i<posts.lenght; i++){\n        postSliderItems.push(<PostSliderItem key={posts[i].id} post={post[i]}/>)\n    }\n    return postSliderItems;\n} \n\nexport default function PostSlider (props) {\n\n  const [posts, setPosts] = useState([])\n  const [sliderItems, setSliderItems] = useState([])\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect( () => {\n     \n    retrievePostsByCategory(props.category)\n    .then(res => {\n        setPosts(res)\n        setSliderItems(createPostSLiderItems(posts))\n        setIsLoaded(true)\n    })\n    .catch(err => console.log(err));\n  },[props.category])\n\n  if(isLoaded){\n    return (\n        <Slider Items={sliderItems}/>\n    )\n  } else {\n  return(               \n      <Loading><Spinner/></Loading>\n  )\n  }\n};"]},"metadata":{},"sourceType":"module"}